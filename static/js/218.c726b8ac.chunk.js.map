{"version":3,"file":"static/js/218.c726b8ac.chunk.js","mappings":"gMASOA,IAAAA,KAAOC,QAAQC,UAAUC,YAgBhC,MAAMC,EAA4B,CAChC,CACEC,GAAI,IACJC,KAAM,2BACNC,IAAK,GACLC,SAAU,CAAEC,IAAK,QAASC,IAAK,SAC/BC,UAAU,EACVC,WAAY,uCACZC,OAAQ,kCACRC,UAAW,CAAC,uCAAU,qEAAe,iEAEvC,CACET,GAAI,IACJC,KAAM,uCACNC,IAAK,GACLC,SAAU,CAAEC,IAAK,QAASC,IAAK,SAC/BC,UAAU,EACVC,WAAY,kEACZC,OAAQ,kCACRC,UAAW,CAAC,iCAAS,2BAAQ,kEAqGjC,EAjG4BC,KAC1B,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAuC,CAAET,IAAK,QAASC,IAAK,WAEpGS,EAAAA,EAAAA,YAAU,KACJC,UAAUC,aACZD,UAAUC,YAAYC,oBACnBC,IACCN,EAAgB,CACdR,IAAKc,EAASC,OAAOC,SACrBf,IAAKa,EAASC,OAAOE,WACrB,IAEHC,IACCC,QAAQD,MAAM,4JAAgCA,EAAM,GAG1D,GACC,IAEH,MAAME,EAAoBC,GACjB9B,IAAAA,QAAU,CACf+B,UAAW,gBACXC,KAAM,4DAEUF,EAAKjB,gBAAgBiB,EAAKxB,iDACVwB,EAAKnB,SAAW,SAAW,4CAG3DsB,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAIrB,OACEC,EAAAA,cAAA,OAAKJ,UAAU,cACbI,EAAAA,cAACC,EAAAA,aAAY,CACXC,OAAQ,CAACrB,EAAaP,IAAKO,EAAaN,KACxC4B,KAAM,GACNC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAEhCN,EAAAA,cAACO,EAAAA,UAAS,CACRC,IAAI,qDACJC,YAAY,0FAIdT,EAAAA,cAACU,EAAAA,OAAM,CACLtB,SAAU,CAACP,EAAaP,IAAKO,EAAaN,KAC1CoC,KAAM9C,IAAAA,QAAU,CACd+B,UAAW,gBACXC,KAAM,gOAMNC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAGnBC,EAAAA,cAACY,EAAAA,MAAK,KACJZ,EAAAA,cAAA,WAAK,iDAKR/B,EAAU4C,KAAIlB,GACbK,EAAAA,cAACU,EAAAA,OAAM,CACLI,IAAKnB,EAAKzB,GACVkB,SAAU,CAACO,EAAKtB,SAASC,IAAKqB,EAAKtB,SAASE,KAC5CoC,KAAMjB,EAAiBC,IAEvBK,EAAAA,cAACY,EAAAA,MAAK,KACJZ,EAAAA,cAAA,OAAKJ,UAAU,gBACbI,EAAAA,cAAA,OACEJ,UAAU,gBACVQ,MAAO,CAAEW,gBAAiB,OAAOpB,EAAKjB,aAExCsB,EAAAA,cAAA,OAAKJ,UAAU,gBACbI,EAAAA,cAAA,UAAKL,EAAKxB,KAAK,KAAGwB,EAAKvB,KACvB4B,EAAAA,cAAA,KAAGJ,UAAU,YAAW,mDACxBI,EAAAA,cAAA,KAAGJ,UAAU,eACVD,EAAKnB,SAAW,uCAAW,8BAAUmB,EAAKlB,eAG/CuB,EAAAA,cAAA,UAAQJ,UAAU,eAAc,0DAQtC,C","sources":["src/components/MapScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapScreen.css';\r\n\r\n// Fix Leaflet icon issue\r\nimport L from 'leaflet';\r\n\r\n// Delete default icon since we're using custom icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\ninterface UserLocation {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  isOnline: boolean;\r\n  lastActive: string;\r\n  avatar: string;\r\n  interests: string[];\r\n}\r\n\r\nconst mockUsers: UserLocation[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Анна',\r\n    age: 25,\r\n    location: { lat: 55.7558, lng: 37.6173 }, // Москва\r\n    isOnline: true,\r\n    lastActive: 'сейчас',\r\n    avatar: 'https://i.pravatar.cc/150?img=1',\r\n    interests: ['музыка', 'путешествия', 'фотография']\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Михаил',\r\n    age: 28,\r\n    location: { lat: 59.9343, lng: 30.3351 }, // Санкт-Петербург\r\n    isOnline: false,\r\n    lastActive: '5 минут назад',\r\n    avatar: 'https://i.pravatar.cc/150?img=2',\r\n    interests: ['спорт', 'кино', 'технологии']\r\n  }\r\n];\r\n\r\nconst MapScreen: React.FC = () => {\r\n  const [userLocation, setUserLocation] = useState<{ lat: number; lng: number }>({ lat: 55.7558, lng: 37.6173 });\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setUserLocation({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error('Ошибка получения геолокации:', error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const createCustomIcon = (user: UserLocation) => {\r\n    return L.divIcon({\r\n      className: 'custom-marker',\r\n      html: `\r\n        <div class=\"user-marker\">\r\n          <img src=\"${user.avatar}\" alt=\"${user.name}\" />\r\n          <div class=\"online-status ${user.isOnline ? 'online' : 'offline'}\"></div>\r\n        </div>\r\n      `,\r\n      iconSize: [40, 40],\r\n      iconAnchor: [20, 40]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-screen\">\r\n      <MapContainer\r\n        center={[userLocation.lat, userLocation.lng]}\r\n        zoom={10}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        \r\n        {/* Маркер текущего пользователя */}\r\n        <Marker \r\n          position={[userLocation.lat, userLocation.lng]}\r\n          icon={L.divIcon({\r\n            className: 'custom-marker',\r\n            html: `\r\n              <div class=\"user-marker current-user\">\r\n                <img src=\"https://i.pravatar.cc/150?img=3\" alt=\"You\" />\r\n                <div class=\"online-status online\"></div>\r\n              </div>\r\n            `,\r\n            iconSize: [40, 40],\r\n            iconAnchor: [20, 40]\r\n          })}\r\n        >\r\n          <Popup>\r\n            <div>Вы здесь</div>\r\n          </Popup>\r\n        </Marker>\r\n\r\n        {/* Маркеры других пользователей */}\r\n        {mockUsers.map(user => (\r\n          <Marker\r\n            key={user.id}\r\n            position={[user.location.lat, user.location.lng]}\r\n            icon={createCustomIcon(user)}\r\n          >\r\n            <Popup>\r\n              <div className=\"user-preview\">\r\n                <div \r\n                  className=\"preview-image\"\r\n                  style={{ backgroundImage: `url(${user.avatar})` }}\r\n                />\r\n                <div className=\"preview-info\">\r\n                  <h3>{user.name}, {user.age}</h3>\r\n                  <p className=\"distance\">12 км от вас</p>\r\n                  <p className=\"last-active\">\r\n                    {user.isOnline ? 'Онлайн' : `Был(а) ${user.lastActive}`}\r\n                  </p>\r\n                </div>\r\n                <button className=\"chat-button\">\r\n                  Написать\r\n                </button>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapScreen; "],"names":["L","Default","prototype","_getIconUrl","mockUsers","id","name","age","location","lat","lng","isOnline","lastActive","avatar","interests","MapScreen","userLocation","setUserLocation","useState","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","createCustomIcon","user","className","html","iconSize","iconAnchor","React","MapContainer","center","zoom","style","height","width","TileLayer","url","attribution","Marker","icon","Popup","map","key","backgroundImage"],"sourceRoot":""}