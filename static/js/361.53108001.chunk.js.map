{"version":3,"file":"static/js/361.53108001.chunk.js","mappings":"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","sources":["src/components/ChatScreen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './ChatScreen.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  senderId: number;\r\n  type: 'text' | 'voice' | 'video' | 'image' | 'sticker' | 'story';\r\n  content: string;\r\n  timestamp: Date;\r\n  isDeleted: boolean;\r\n}\r\n\r\ninterface Chat {\r\n  id: number;\r\n  userId: number;\r\n  userName: string;\r\n  userPhoto: string;\r\n  lastActive: Date;\r\n  messages: Message[];\r\n  isOnline: boolean;\r\n}\r\n\r\nconst initialChats: Chat[] = [\r\n  {\r\n    id: 1,\r\n    userId: 1,\r\n    userName: \"Анна\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(),\r\n    isOnline: true,\r\n    messages: [\r\n      {\r\n        id: '1',\r\n        senderId: 1,\r\n        type: 'text',\r\n        content: 'Привет! Как дела?',\r\n        timestamp: new Date(Date.now() - 3600000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '2',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Привет! Все отлично, спасибо! Как твои дела?',\r\n        timestamp: new Date(Date.now() - 3500000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '3',\r\n        senderId: 1,\r\n        type: 'image',\r\n        content: 'https://images.unsplash.com/photo-1513379733131-48b424e4c267?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n        timestamp: new Date(Date.now() - 3400000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '4',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Вау, отличное фото! Где это снято?',\r\n        timestamp: new Date(Date.now() - 3300000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    userId: 2,\r\n    userName: \"Мария\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1524638431109-93d95c968f03?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(Date.now() - 1800000),\r\n    isOnline: false,\r\n    messages: [\r\n      {\r\n        id: '5',\r\n        senderId: 2,\r\n        type: 'image',\r\n        content: 'https://images.unsplash.com/photo-1526080652727-5b77f74eacd2?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n        timestamp: new Date(Date.now() - 7200000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '6',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Очень красиво! Ты профессиональный фотограф?',\r\n        timestamp: new Date(Date.now() - 7100000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    userId: 3,\r\n    userName: \"София\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(),\r\n    isOnline: true,\r\n    messages: [\r\n      {\r\n        id: '7',\r\n        senderId: 3,\r\n        type: 'text',\r\n        content: 'Привет! Видел твой новый проект, очень впечатляет! 👏',\r\n        timestamp: new Date(Date.now() - 86400000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '8',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Спасибо большое! Я очень старался над ним 😊',\r\n        timestamp: new Date(Date.now() - 86300000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 4,\r\n    userId: 4,\r\n    userName: \"Екатерина\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1488716820095-cbe80883c496?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(Date.now() - 3600000),\r\n    isOnline: false,\r\n    messages: [\r\n      {\r\n        id: '9',\r\n        senderId: 4,\r\n        type: 'text',\r\n        content: 'Готова к завтрашней встрече?',\r\n        timestamp: new Date(Date.now() - 172800000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '10',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Да, уже подготовила все материалы!',\r\n        timestamp: new Date(Date.now() - 172700000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 5,\r\n    userId: 5,\r\n    userName: \"Алиса\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1534528741775-53994a69daeb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(),\r\n    isOnline: true,\r\n    messages: [\r\n      {\r\n        id: '11',\r\n        senderId: 5,\r\n        type: 'voice',\r\n        content: '/audio/voice1.webm',\r\n        timestamp: new Date(Date.now() - 259200000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '12',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Извини, сейчас не могу прослушать, перезвоню позже!',\r\n        timestamp: new Date(Date.now() - 259100000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 6,\r\n    userId: 6,\r\n    userName: \"Виктория\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1524504388940-b1c1722653e1?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(Date.now() - 7200000),\r\n    isOnline: false,\r\n    messages: [\r\n      {\r\n        id: '13',\r\n        senderId: 6,\r\n        type: 'video',\r\n        content: '/video/video1.webm',\r\n        timestamp: new Date(Date.now() - 345600000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '14',\r\n        senderId: 0,\r\n        type: 'text',\r\n        content: 'Классное видео! Обязательно посмотрю полностью вечером',\r\n        timestamp: new Date(Date.now() - 345500000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 7,\r\n    userId: 7,\r\n    userName: \"Полина\",\r\n    userPhoto: \"https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    lastActive: new Date(Date.now() - 14400000),\r\n    isOnline: false,\r\n    messages: [\r\n      {\r\n        id: '15',\r\n        senderId: 7,\r\n        type: 'sticker',\r\n        content: '/stickers/sticker1.png',\r\n        timestamp: new Date(Date.now() - 432000000),\r\n        isDeleted: false\r\n      },\r\n      {\r\n        id: '16',\r\n        senderId: 0,\r\n        type: 'sticker',\r\n        content: '/stickers/sticker2.png',\r\n        timestamp: new Date(Date.now() - 431900000),\r\n        isDeleted: false\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst emojis = ['😊', '😂', '❤️', '😍', '👍', '🎉', '🌟', '💕', '🤔', '😎', '😌', '🥰', '😇', '🤗', '😋', '😉', '🙌', '✨', '🔥', '💪'];\r\nconst stickers = [\r\n  '/stickers/sticker1.png',\r\n  '/stickers/sticker2.png',\r\n  '/stickers/sticker3.png',\r\n  '/stickers/sticker4.png',\r\n  '/stickers/sticker5.png',\r\n  '/stickers/sticker6.png',\r\n  '/stickers/sticker7.png',\r\n  '/stickers/sticker8.png',\r\n  '/stickers/sticker9.png',\r\n  '/stickers/sticker10.png'\r\n];\r\n\r\nconst ChatScreen: React.FC = () => {\r\n  const [chats, setChats] = useState<Chat[]>(initialChats);\r\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\r\n  const [message, setMessage] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [showEmojis, setShowEmojis] = useState(false);\r\n  const [showStickers, setShowStickers] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState<MediaStream | null>(null);\r\n  const [isVideoMode, setIsVideoMode] = useState(false);\r\n\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n  const messageEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [selectedChat?.messages]);\r\n\r\n  const startRecording = async (type: 'audio' | 'video') => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: type === 'video'\r\n      });\r\n      \r\n      setMediaStream(stream);\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n      audioChunksRef.current = [];\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          audioChunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, {\r\n          type: type === 'video' ? 'video/webm' : 'audio/webm'\r\n        });\r\n        const url = URL.createObjectURL(audioBlob);\r\n        \r\n        if (selectedChat) {\r\n          const newMessage: Message = {\r\n            id: Date.now().toString(),\r\n            senderId: 0,\r\n            type: type === 'video' ? 'video' : 'voice',\r\n            content: url,\r\n            timestamp: new Date(),\r\n            isDeleted: false\r\n          };\r\n          \r\n          addMessage(selectedChat.id, newMessage);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && mediaStream) {\r\n      mediaRecorderRef.current.stop();\r\n      mediaStream.getTracks().forEach(track => track.stop());\r\n      setMediaStream(null);\r\n      setIsRecording(false);\r\n      setIsVideoMode(false);\r\n    }\r\n  };\r\n\r\n  const takePhoto = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      await video.play();\r\n\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      canvas.getContext('2d')?.drawImage(video, 0, 0);\r\n\r\n      const photoUrl = canvas.toDataURL('image/jpeg');\r\n      stream.getTracks().forEach(track => track.stop());\r\n\r\n      if (selectedChat) {\r\n        const newMessage: Message = {\r\n          id: Date.now().toString(),\r\n          senderId: 0,\r\n          type: 'image',\r\n          content: photoUrl,\r\n          timestamp: new Date(),\r\n          isDeleted: false\r\n        };\r\n        \r\n        addMessage(selectedChat.id, newMessage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error taking photo:', error);\r\n    }\r\n  };\r\n\r\n  const addMessage = (chatId: number, newMessage: Message) => {\r\n    setChats(prevChats => \r\n      prevChats.map(chat => \r\n        chat.id === chatId\r\n          ? { ...chat, messages: [...chat.messages, newMessage] }\r\n          : chat\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteMessage = (chatId: number, messageId: string) => {\r\n    setChats(prevChats =>\r\n      prevChats.map(chat =>\r\n        chat.id === chatId\r\n          ? {\r\n              ...chat,\r\n              messages: chat.messages.map(msg =>\r\n                msg.id === messageId\r\n                  ? { ...msg, isDeleted: true }\r\n                  : msg\r\n              )\r\n            }\r\n          : chat\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteChat = (chatId: number) => {\r\n    setChats(prevChats => prevChats.filter(chat => chat.id !== chatId));\r\n    if (selectedChat?.id === chatId) {\r\n      setSelectedChat(null);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!message.trim() || !selectedChat) return;\r\n\r\n    const newMessage: Message = {\r\n      id: Date.now().toString(),\r\n      senderId: 0,\r\n      type: 'text',\r\n      content: message.trim(),\r\n      timestamp: new Date(),\r\n      isDeleted: false\r\n    };\r\n\r\n    addMessage(selectedChat.id, newMessage);\r\n    setMessage('');\r\n  };\r\n\r\n  const addEmoji = (emoji: string) => {\r\n    setMessage(prev => prev + emoji);\r\n  };\r\n\r\n  const sendSticker = (stickerUrl: string) => {\r\n    if (!selectedChat) return;\r\n\r\n    const newMessage: Message = {\r\n      id: Date.now().toString(),\r\n      senderId: 0,\r\n      type: 'sticker',\r\n      content: stickerUrl,\r\n      timestamp: new Date(),\r\n      isDeleted: false\r\n    };\r\n\r\n    addMessage(selectedChat.id, newMessage);\r\n    setShowStickers(false);\r\n  };\r\n\r\n  const renderMessage = (message: Message) => {\r\n    if (message.isDeleted) {\r\n      return <div className=\"deleted-message\">Сообщение удалено</div>;\r\n    }\r\n\r\n    switch (message.type) {\r\n      case 'text':\r\n        return <div className=\"message-text\">{message.content}</div>;\r\n      case 'voice':\r\n        return (\r\n          <audio controls className=\"voice-message\">\r\n            <source src={message.content} type=\"audio/webm\" />\r\n          </audio>\r\n        );\r\n      case 'video':\r\n        return (\r\n          <video controls className=\"video-message\">\r\n            <source src={message.content} type=\"video/webm\" />\r\n          </video>\r\n        );\r\n      case 'image':\r\n        return <img src={message.content} alt=\"Фото\" className=\"image-message\" />;\r\n      case 'sticker':\r\n        return <img src={message.content} alt=\"Стикер\" className=\"sticker-message\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-screen\">\r\n      <div className=\"chat-list\">\r\n        {chats.map(chat => (\r\n          <div\r\n            key={chat.id}\r\n            className={`chat-item ${selectedChat?.id === chat.id ? 'active' : ''}`}\r\n            onClick={() => setSelectedChat(chat)}\r\n          >\r\n            <div className=\"chat-item-photo\">\r\n              <img src={chat.userPhoto} alt={chat.userName} />\r\n              {chat.isOnline && <div className=\"online-indicator\" />}\r\n            </div>\r\n            <div className=\"chat-item-info\">\r\n              <div className=\"chat-item-name\">{chat.userName}</div>\r\n              <div className=\"chat-item-last-message\">\r\n                {chat.messages[chat.messages.length - 1]?.content}\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"delete-chat-button\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                deleteChat(chat.id);\r\n              }}\r\n            >\r\n              🗑️\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedChat ? (\r\n        <div className=\"chat-content\">\r\n          <div className=\"chat-header\">\r\n            <img src={selectedChat.userPhoto} alt={selectedChat.userName} />\r\n            <div className=\"chat-header-info\">\r\n              <div className=\"chat-header-name\">{selectedChat.userName}</div>\r\n              <div className=\"chat-header-status\">\r\n                {selectedChat.isOnline ? 'В сети' : 'Был(а) в сети ' + new Date(selectedChat.lastActive).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"messages-container\">\r\n            {selectedChat.messages.map(message => (\r\n              <div\r\n                key={message.id}\r\n                className={`message ${message.senderId === 0 ? 'sent' : 'received'}`}\r\n              >\r\n                {renderMessage(message)}\r\n                <div className=\"message-time\">\r\n                  {new Date(message.timestamp).toLocaleTimeString()}\r\n                </div>\r\n                {message.senderId === 0 && !message.isDeleted && (\r\n                  <button\r\n                    className=\"delete-message-button\"\r\n                    onClick={() => deleteMessage(selectedChat.id, message.id)}\r\n                  >\r\n                    🗑️\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div ref={messageEndRef} />\r\n          </div>\r\n\r\n          <div className=\"chat-input\">\r\n            <div className=\"input-buttons\">\r\n              <button onClick={() => setShowEmojis(!showEmojis)}>😊</button>\r\n              <button onClick={() => setShowStickers(!showStickers)}>🎯</button>\r\n              <button onClick={() => startRecording('audio')}>🎤</button>\r\n              <button onClick={() => {\r\n                setIsVideoMode(true);\r\n                startRecording('video');\r\n              }}>🎥</button>\r\n              <button onClick={takePhoto}>📸</button>\r\n            </div>\r\n\r\n            {showEmojis && (\r\n              <div className=\"emoji-picker\">\r\n                {emojis.map(emoji => (\r\n                  <button key={emoji} onClick={() => addEmoji(emoji)}>\r\n                    {emoji}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {showStickers && (\r\n              <div className=\"sticker-picker\">\r\n                {stickers.map(sticker => (\r\n                  <button key={sticker} onClick={() => sendSticker(sticker)}>\r\n                    <img src={sticker} alt=\"Стикер\" />\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"Введите сообщение...\"\r\n              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n            />\r\n\r\n            {isRecording ? (\r\n              <button className=\"stop-recording\" onClick={stopRecording}>\r\n                ⏹️ Остановить запись\r\n              </button>\r\n            ) : (\r\n              <button onClick={sendMessage}>➤</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-chat-selected\">\r\n          Выберите чат для начала общения\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatScreen; "],"names":["initialChats","id","userId","userName","userPhoto","lastActive","Date","isOnline","messages","senderId","type","content","timestamp","now","isDeleted","emojis","stickers","ChatScreen","chats","setChats","useState","selectedChat","setSelectedChat","message","setMessage","isRecording","setIsRecording","showEmojis","setShowEmojis","showStickers","setShowStickers","mediaStream","setMediaStream","isVideoMode","setIsVideoMode","mediaRecorderRef","useRef","audioChunksRef","messageEndRef","useEffect","current","scrollIntoView","behavior","startRecording","async","stream","navigator","mediaDevices","getUserMedia","audio","video","mediaRecorder","MediaRecorder","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","url","URL","createObjectURL","newMessage","toString","addMessage","start","error","console","chatId","prevChats","map","chat","sendMessage","trim","React","className","key","onClick","src","alt","length","e","stopPropagation","filter","toLocaleTimeString","controls","renderMessage","deleteMessage","messageId","msg","ref","document","createElement","srcObject","play","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","photoUrl","toDataURL","getTracks","forEach","track","stop","emoji","prev","addEmoji","sticker","stickerUrl","sendSticker","value","onChange","target","placeholder","onKeyPress","stopRecording"],"sourceRoot":""}