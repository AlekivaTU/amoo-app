{"ast":null,"code":"import React,{useState,useEffect}from'react';import{streamService}from'../services/streamService';import{useAuth}from'../contexts/AuthContext';import'./StreamsScreen.css';const StreamsScreen=()=>{const[streams,setStreams]=useState([]);const[currentStream,setCurrentStream]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[isStartingStream,setIsStartingStream]=useState(false);const[streamSettings,setStreamSettings]=useState({title:'',description:'',isPublic:true,allowChat:true});const{user}=useAuth();useEffect(()=>{loadStreams();},[]);const loadStreams=async()=>{try{setLoading(true);const streamsData=await streamService.getStreams();setStreams(streamsData);}catch(err){setError('Ошибка при загрузке стримов');}finally{setLoading(false);}};const handleStartStream=async()=>{try{setIsStartingStream(true);const stream=await streamService.startStream(streamSettings);setCurrentStream(stream);loadStreams();}catch(err){setError('Ошибка при запуске стрима');}finally{setIsStartingStream(false);}};const handleEndStream=async()=>{if(!currentStream)return;try{await streamService.endStream(currentStream.id);setCurrentStream(null);loadStreams();}catch(err){setError('Ошибка при завершении стрима');}};const handleWatchStream=async streamId=>{try{const stream=await streamService.getStream(streamId);setCurrentStream(stream);}catch(err){setError('Ошибка при загрузке стрима');}};if(loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"},\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");}if(error){return/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},error);}return/*#__PURE__*/React.createElement(\"div\",{className:\"streams-screen\"},currentStream?/*#__PURE__*/React.createElement(\"div\",{className:\"current-stream\"},/*#__PURE__*/React.createElement(\"div\",{className:\"stream-header\"},/*#__PURE__*/React.createElement(\"h2\",null,currentStream.title),currentStream.userId===user?.id&&/*#__PURE__*/React.createElement(\"button\",{onClick:handleEndStream,className:\"end-stream-button\"},\"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u0438\\u043C\")),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-player\"},/*#__PURE__*/React.createElement(\"div\",{className:\"stream-placeholder\"},\"\\u0421\\u0442\\u0440\\u0438\\u043C \",currentStream.title)),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-info\"},/*#__PURE__*/React.createElement(\"p\",null,currentStream.description),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-stats\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\uD83D\\uDC65 \",currentStream.viewerCount),/*#__PURE__*/React.createElement(\"span\",null,\"\\uD83D\\uDD52 \",new Date(currentStream.startedAt).toLocaleTimeString())))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"streams-header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"\\u0421\\u0442\\u0440\\u0438\\u043C\\u044B\"),!isStartingStream&&/*#__PURE__*/React.createElement(\"button\",{onClick:()=>setIsStartingStream(true),className:\"start-stream-button\"},\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0438\\u043C\")),isStartingStream?/*#__PURE__*/React.createElement(\"div\",{className:\"stream-settings\"},/*#__PURE__*/React.createElement(\"h3\",null,\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u0441\\u0442\\u0440\\u0438\\u043C\\u0430\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:streamSettings.title,onChange:e=>setStreamSettings({...streamSettings,title:e.target.value})})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"),/*#__PURE__*/React.createElement(\"textarea\",{value:streamSettings.description,onChange:e=>setStreamSettings({...streamSettings,description:e.target.value})})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:streamSettings.isPublic,onChange:e=>setStreamSettings({...streamSettings,isPublic:e.target.checked})}),\"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u0441\\u0442\\u0440\\u0438\\u043C\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:streamSettings.allowChat,onChange:e=>setStreamSettings({...streamSettings,allowChat:e.target.checked})}),\"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\")),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-actions\"},/*#__PURE__*/React.createElement(\"button\",{onClick:handleStartStream,className:\"start-button\"},\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C\"),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>setIsStartingStream(false),className:\"cancel-button\"},\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"streams-grid\"},streams.map(stream=>/*#__PURE__*/React.createElement(\"div\",{key:stream.id,className:\"stream-card\"},/*#__PURE__*/React.createElement(\"img\",{src:stream.thumbnailUrl,alt:stream.title,className:\"stream-thumbnail\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-card-info\"},/*#__PURE__*/React.createElement(\"h3\",null,stream.title),/*#__PURE__*/React.createElement(\"p\",null,stream.description),/*#__PURE__*/React.createElement(\"div\",{className:\"stream-card-stats\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\uD83D\\uDC65 \",stream.viewerCount),/*#__PURE__*/React.createElement(\"span\",null,\"\\uD83D\\uDD52 \",new Date(stream.startedAt).toLocaleTimeString())),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>handleWatchStream(stream.id),className:\"watch-stream-button\"},\"\\u0421\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C\")))))));};export default StreamsScreen;","map":{"version":3,"names":["React","useState","useEffect","streamService","useAuth","StreamsScreen","streams","setStreams","currentStream","setCurrentStream","loading","setLoading","error","setError","isStartingStream","setIsStartingStream","streamSettings","setStreamSettings","title","description","isPublic","allowChat","user","loadStreams","streamsData","getStreams","err","handleStartStream","stream","startStream","handleEndStream","endStream","id","handleWatchStream","streamId","getStream","createElement","className","userId","onClick","viewerCount","Date","startedAt","toLocaleTimeString","Fragment","type","value","onChange","e","target","checked","map","key","src","thumbnailUrl","alt"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/components/StreamsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { streamService, Stream, StreamSettings } from '../services/streamService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport './StreamsScreen.css';\r\n\r\nconst StreamsScreen: React.FC = () => {\r\n  const [streams, setStreams] = useState<Stream[]>([]);\r\n  const [currentStream, setCurrentStream] = useState<Stream | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [isStartingStream, setIsStartingStream] = useState(false);\r\n  const [streamSettings, setStreamSettings] = useState<StreamSettings>({\r\n    title: '',\r\n    description: '',\r\n    isPublic: true,\r\n    allowChat: true,\r\n  });\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    loadStreams();\r\n  }, []);\r\n\r\n  const loadStreams = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const streamsData = await streamService.getStreams();\r\n      setStreams(streamsData);\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке стримов');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStartStream = async () => {\r\n    try {\r\n      setIsStartingStream(true);\r\n      const stream = await streamService.startStream(streamSettings);\r\n      setCurrentStream(stream);\r\n      loadStreams();\r\n    } catch (err) {\r\n      setError('Ошибка при запуске стрима');\r\n    } finally {\r\n      setIsStartingStream(false);\r\n    }\r\n  };\r\n\r\n  const handleEndStream = async () => {\r\n    if (!currentStream) return;\r\n\r\n    try {\r\n      await streamService.endStream(currentStream.id);\r\n      setCurrentStream(null);\r\n      loadStreams();\r\n    } catch (err) {\r\n      setError('Ошибка при завершении стрима');\r\n    }\r\n  };\r\n\r\n  const handleWatchStream = async (streamId: string) => {\r\n    try {\r\n      const stream = await streamService.getStream(streamId);\r\n      setCurrentStream(stream);\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке стрима');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Загрузка...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"streams-screen\">\r\n      {currentStream ? (\r\n        <div className=\"current-stream\">\r\n          <div className=\"stream-header\">\r\n            <h2>{currentStream.title}</h2>\r\n            {currentStream.userId === user?.id && (\r\n              <button onClick={handleEndStream} className=\"end-stream-button\">\r\n                Завершить стрим\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"stream-player\">\r\n            {/* Здесь будет плеер для стрима */}\r\n            <div className=\"stream-placeholder\">\r\n              Стрим {currentStream.title}\r\n            </div>\r\n          </div>\r\n          <div className=\"stream-info\">\r\n            <p>{currentStream.description}</p>\r\n            <div className=\"stream-stats\">\r\n              <span>👥 {currentStream.viewerCount}</span>\r\n              <span>🕒 {new Date(currentStream.startedAt!).toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"streams-header\">\r\n            <h2>Стримы</h2>\r\n            {!isStartingStream && (\r\n              <button onClick={() => setIsStartingStream(true)} className=\"start-stream-button\">\r\n                Начать стрим\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {isStartingStream ? (\r\n            <div className=\"stream-settings\">\r\n              <h3>Настройки стрима</h3>\r\n              <div className=\"form-group\">\r\n                <label>Название</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={streamSettings.title}\r\n                  onChange={(e) =>\r\n                    setStreamSettings({ ...streamSettings, title: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Описание</label>\r\n                <textarea\r\n                  value={streamSettings.description}\r\n                  onChange={(e) =>\r\n                    setStreamSettings({ ...streamSettings, description: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={streamSettings.isPublic}\r\n                    onChange={(e) =>\r\n                      setStreamSettings({ ...streamSettings, isPublic: e.target.checked })\r\n                    }\r\n                  />\r\n                  Публичный стрим\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={streamSettings.allowChat}\r\n                    onChange={(e) =>\r\n                      setStreamSettings({ ...streamSettings, allowChat: e.target.checked })\r\n                    }\r\n                  />\r\n                  Разрешить чат\r\n                </label>\r\n              </div>\r\n              <div className=\"stream-actions\">\r\n                <button onClick={handleStartStream} className=\"start-button\">\r\n                  Начать\r\n                </button>\r\n                <button onClick={() => setIsStartingStream(false)} className=\"cancel-button\">\r\n                  Отмена\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"streams-grid\">\r\n              {streams.map((stream) => (\r\n                <div key={stream.id} className=\"stream-card\">\r\n                  <img src={stream.thumbnailUrl} alt={stream.title} className=\"stream-thumbnail\" />\r\n                  <div className=\"stream-card-info\">\r\n                    <h3>{stream.title}</h3>\r\n                    <p>{stream.description}</p>\r\n                    <div className=\"stream-card-stats\">\r\n                      <span>👥 {stream.viewerCount}</span>\r\n                      <span>🕒 {new Date(stream.startedAt!).toLocaleTimeString()}</span>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleWatchStream(stream.id)}\r\n                      className=\"watch-stream-button\"\r\n                    >\r\n                      Смотреть\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}