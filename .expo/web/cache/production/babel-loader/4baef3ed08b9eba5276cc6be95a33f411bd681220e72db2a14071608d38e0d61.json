{"ast":null,"code":"import{useState,useEffect}from'react';export const useTheme=()=>{const[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme||'light';});useEffect(()=>{document.documentElement.setAttribute('data-theme',theme);localStorage.setItem('theme',theme);},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};return{theme,toggleTheme};};","map":{"version":3,"names":["useState","useEffect","useTheme","theme","setTheme","savedTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","prevTheme"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/hooks/useTheme.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ntype Theme = 'light' | 'dark';\r\n\r\nexport const useTheme = () => {\r\n  const [theme, setTheme] = useState<Theme>(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return (savedTheme as Theme) || 'light';\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return { theme, toggleTheme };\r\n}; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAI3C,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAK,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,MAAQ,CAAAF,UAAU,EAAc,OAAO,CACzC,CAAC,CAAC,CAEFJ,SAAS,CAAC,IAAM,CACdO,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEP,KAAK,CAAC,CAC1DG,YAAY,CAACK,OAAO,CAAC,OAAO,CAAER,KAAK,CAAC,CACtC,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBR,QAAQ,CAACS,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,MAAO,CAAEV,KAAK,CAAES,WAAY,CAAC,CAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}