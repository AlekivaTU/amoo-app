{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import Loading from'./Loading';const ProtectedRoute=({children})=>{const{isAuthenticated,loading}=useAuth();if(loading){return/*#__PURE__*/React.createElement(Loading,null);}if(!isAuthenticated){return/*#__PURE__*/React.createElement(Navigate,{to:\"/login\",replace:true});}return/*#__PURE__*/React.createElement(React.Fragment,null,children);};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","Loading","ProtectedRoute","children","isAuthenticated","loading","createElement","to","replace","Fragment"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport Loading from './Loading';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,OAAO,KAAM,WAAW,CAM/B,KAAM,CAAAC,cAA6C,CAAGA,CAAC,CAAEC,QAAS,CAAC,GAAK,CACtE,KAAM,CAAEC,eAAe,CAAEC,OAAQ,CAAC,CAAGL,OAAO,CAAC,CAAC,CAE9C,GAAIK,OAAO,CAAE,CACX,mBAAOP,KAAA,CAAAQ,aAAA,CAACL,OAAO,KAAE,CAAC,CACpB,CAEA,GAAI,CAACG,eAAe,CAAE,CACpB,mBAAON,KAAA,CAAAQ,aAAA,CAACP,QAAQ,EAACQ,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,mBAAOV,KAAA,CAAAQ,aAAA,CAAAR,KAAA,CAAAW,QAAA,MAAGN,QAAW,CAAC,CACxB,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}