{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';const ProtectedRoute=({children})=>{const{isAuthenticated,loading}=useAuth();const location=useLocation();if(loading){return/*#__PURE__*/React.createElement(\"div\",null,\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");}if(!isAuthenticated){return/*#__PURE__*/React.createElement(Navigate,{to:\"/login\",state:{from:location},replace:true});}return/*#__PURE__*/React.createElement(React.Fragment,null,children);};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","ProtectedRoute","children","isAuthenticated","loading","location","createElement","to","state","from","replace","Fragment"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,yBAAyB,CAMjD,KAAM,CAAAC,cAA6C,CAAGA,CAAC,CAAEC,QAAS,CAAC,GAAK,CACtE,KAAM,CAAEC,eAAe,CAAEC,OAAQ,CAAC,CAAGJ,OAAO,CAAC,CAAC,CAC9C,KAAM,CAAAK,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAE9B,GAAIK,OAAO,CAAE,CACX,mBAAOP,KAAA,CAAAS,aAAA,YAAK,qDAAgB,CAAC,CAC/B,CAEA,GAAI,CAACH,eAAe,CAAE,CACpB,mBAAON,KAAA,CAAAS,aAAA,CAACR,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,QAAS,CAAE,CAACK,OAAO,MAAE,CAAC,CACpE,CAEA,mBAAOb,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAc,QAAA,MAAGT,QAAW,CAAC,CACxB,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}