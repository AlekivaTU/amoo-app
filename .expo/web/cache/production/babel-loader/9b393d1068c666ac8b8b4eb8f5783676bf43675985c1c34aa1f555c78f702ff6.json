{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';const ThemeContext=/*#__PURE__*/createContext(undefined);export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=({children})=>{const[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme||'light';});useEffect(()=>{localStorage.setItem('theme',theme);document.documentElement.setAttribute('data-theme',theme);},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};return/*#__PURE__*/React.createElement(ThemeContext.Provider,{value:{theme,toggleTheme}},children);};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","children","theme","setTheme","savedTheme","localStorage","getItem","setItem","document","documentElement","setAttribute","toggleTheme","prevTheme","createElement","Provider","value"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ntype Theme = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [theme, setTheme] = useState<Theme>(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return (savedTheme as Theme) || 'light';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAS7E,KAAM,CAAAC,YAAY,cAAGJ,aAAa,CAA+BK,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGN,UAAU,CAACG,YAAY,CAAC,CACxC,GAAI,CAACG,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAsD,CAAGA,CAAC,CAAEC,QAAS,CAAC,GAAK,CACtF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAW,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,MAAQ,CAAAF,UAAU,EAAc,OAAO,CACzC,CAAC,CAAC,CAEFV,SAAS,CAAC,IAAM,CACdW,YAAY,CAACE,OAAO,CAAC,OAAO,CAAEL,KAAK,CAAC,CACpCM,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAER,KAAK,CAAC,CAC5D,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBR,QAAQ,CAACS,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,mBACEtB,KAAA,CAAAuB,aAAA,CAAClB,YAAY,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEb,KAAK,CAAES,WAAY,CAAE,EAClDV,QACoB,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}