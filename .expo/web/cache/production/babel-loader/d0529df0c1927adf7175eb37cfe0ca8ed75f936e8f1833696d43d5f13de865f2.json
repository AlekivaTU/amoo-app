{"ast":null,"code":"import React,{useState,useEffect}from'react';import{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';import'leaflet/dist/leaflet.css';import'./MapScreen.css';// Fix Leaflet icon issue\nimport L from'leaflet';// Delete default icon since we're using custom icons\ndelete L.Icon.Default.prototype._getIconUrl;const mockUsers=[{id:'1',name:'Анна',age:25,location:{lat:55.7558,lng:37.6173},// Москва\nisOnline:true,lastActive:'сейчас',avatar:'https://i.pravatar.cc/150?img=1',interests:['музыка','путешествия','фотография']},{id:'2',name:'Михаил',age:28,location:{lat:59.9343,lng:30.3351},// Санкт-Петербург\nisOnline:false,lastActive:'5 минут назад',avatar:'https://i.pravatar.cc/150?img=2',interests:['спорт','кино','технологии']}];const MapScreen=()=>{const[userLocation,setUserLocation]=useState({lat:55.7558,lng:37.6173});useEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{setUserLocation({lat:position.coords.latitude,lng:position.coords.longitude});},error=>{console.error('Ошибка получения геолокации:',error);});}},[]);const createCustomIcon=user=>{return L.divIcon({className:'custom-marker',html:`\n        <div class=\"user-marker\">\n          <img src=\"${user.avatar}\" alt=\"${user.name}\" />\n          <div class=\"online-status ${user.isOnline?'online':'offline'}\"></div>\n        </div>\n      `,iconSize:[40,40],iconAnchor:[20,40]});};return/*#__PURE__*/React.createElement(\"div\",{className:\"map-screen\"},/*#__PURE__*/React.createElement(MapContainer,{center:[userLocation.lat,userLocation.lng],zoom:10,style:{height:'100%',width:'100%'}},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/React.createElement(Marker,{position:[userLocation.lat,userLocation.lng],icon:L.divIcon({className:'custom-marker',html:`\n              <div class=\"user-marker current-user\">\n                <img src=\"https://i.pravatar.cc/150?img=3\" alt=\"You\" />\n                <div class=\"online-status online\"></div>\n              </div>\n            `,iconSize:[40,40],iconAnchor:[20,40]})},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",null,\"\\u0412\\u044B \\u0437\\u0434\\u0435\\u0441\\u044C\"))),mockUsers.map(user=>/*#__PURE__*/React.createElement(Marker,{key:user.id,position:[user.location.lat,user.location.lng],icon:createCustomIcon(user)},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"user-preview\"},/*#__PURE__*/React.createElement(\"div\",{className:\"preview-image\",style:{backgroundImage:`url(${user.avatar})`}}),/*#__PURE__*/React.createElement(\"div\",{className:\"preview-info\"},/*#__PURE__*/React.createElement(\"h3\",null,user.name,\", \",user.age),/*#__PURE__*/React.createElement(\"p\",{className:\"distance\"},\"12 \\u043A\\u043C \\u043E\\u0442 \\u0432\\u0430\\u0441\"),/*#__PURE__*/React.createElement(\"p\",{className:\"last-active\"},user.isOnline?'Онлайн':`Был(а) ${user.lastActive}`)),/*#__PURE__*/React.createElement(\"button\",{className:\"chat-button\"},\"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\")))))));};export default MapScreen;","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","Icon","Default","prototype","_getIconUrl","mockUsers","id","name","age","location","lat","lng","isOnline","lastActive","avatar","interests","MapScreen","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","createCustomIcon","user","divIcon","className","html","iconSize","iconAnchor","createElement","center","zoom","style","height","width","url","attribution","icon","map","key","backgroundImage"],"sources":["C:/Users/Maks/Desktop/Amoo App/amoo-app/src/components/MapScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapScreen.css';\r\n\r\n// Fix Leaflet icon issue\r\nimport L from 'leaflet';\r\n\r\n// Delete default icon since we're using custom icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\ninterface UserLocation {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  isOnline: boolean;\r\n  lastActive: string;\r\n  avatar: string;\r\n  interests: string[];\r\n}\r\n\r\nconst mockUsers: UserLocation[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Анна',\r\n    age: 25,\r\n    location: { lat: 55.7558, lng: 37.6173 }, // Москва\r\n    isOnline: true,\r\n    lastActive: 'сейчас',\r\n    avatar: 'https://i.pravatar.cc/150?img=1',\r\n    interests: ['музыка', 'путешествия', 'фотография']\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Михаил',\r\n    age: 28,\r\n    location: { lat: 59.9343, lng: 30.3351 }, // Санкт-Петербург\r\n    isOnline: false,\r\n    lastActive: '5 минут назад',\r\n    avatar: 'https://i.pravatar.cc/150?img=2',\r\n    interests: ['спорт', 'кино', 'технологии']\r\n  }\r\n];\r\n\r\nconst MapScreen: React.FC = () => {\r\n  const [userLocation, setUserLocation] = useState<{ lat: number; lng: number }>({ lat: 55.7558, lng: 37.6173 });\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setUserLocation({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error('Ошибка получения геолокации:', error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const createCustomIcon = (user: UserLocation) => {\r\n    return L.divIcon({\r\n      className: 'custom-marker',\r\n      html: `\r\n        <div class=\"user-marker\">\r\n          <img src=\"${user.avatar}\" alt=\"${user.name}\" />\r\n          <div class=\"online-status ${user.isOnline ? 'online' : 'offline'}\"></div>\r\n        </div>\r\n      `,\r\n      iconSize: [40, 40],\r\n      iconAnchor: [20, 40]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-screen\">\r\n      <MapContainer\r\n        center={[userLocation.lat, userLocation.lng]}\r\n        zoom={10}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        \r\n        {/* Маркер текущего пользователя */}\r\n        <Marker \r\n          position={[userLocation.lat, userLocation.lng]}\r\n          icon={L.divIcon({\r\n            className: 'custom-marker',\r\n            html: `\r\n              <div class=\"user-marker current-user\">\r\n                <img src=\"https://i.pravatar.cc/150?img=3\" alt=\"You\" />\r\n                <div class=\"online-status online\"></div>\r\n              </div>\r\n            `,\r\n            iconSize: [40, 40],\r\n            iconAnchor: [20, 40]\r\n          })}\r\n        >\r\n          <Popup>\r\n            <div>Вы здесь</div>\r\n          </Popup>\r\n        </Marker>\r\n\r\n        {/* Маркеры других пользователей */}\r\n        {mockUsers.map(user => (\r\n          <Marker\r\n            key={user.id}\r\n            position={[user.location.lat, user.location.lng]}\r\n            icon={createCustomIcon(user)}\r\n          >\r\n            <Popup>\r\n              <div className=\"user-preview\">\r\n                <div \r\n                  className=\"preview-image\"\r\n                  style={{ backgroundImage: `url(${user.avatar})` }}\r\n                />\r\n                <div className=\"preview-info\">\r\n                  <h3>{user.name}, {user.age}</h3>\r\n                  <p className=\"distance\">12 км от вас</p>\r\n                  <p className=\"last-active\">\r\n                    {user.isOnline ? 'Онлайн' : `Был(а) ${user.lastActive}`}\r\n                  </p>\r\n                </div>\r\n                <button className=\"chat-button\">\r\n                  Написать\r\n                </button>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}